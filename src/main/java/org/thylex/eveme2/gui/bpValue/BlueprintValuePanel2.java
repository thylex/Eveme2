/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thylex.eveme2.gui.bpValue;

import java.awt.BorderLayout;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import org.thylex.eveme2.app.App;
import org.thylex.eveme2.io.entities.sde.InvCategories;
import org.thylex.eveme2.io.entities.sde.InvGroups;
import org.thylex.eveme2.io.entities.sde.InvMarketGroups;
import org.thylex.eveme2.io.entities.sde.InvTypes;

/**
 *
 * @author thyle
 */
public class BlueprintValuePanel2 extends javax.swing.JPanel implements TreeSelectionListener {

    private App app;
    private bpValSplit parent;
    private DefaultMutableTreeNode top = null;
    private JScrollPane treeView = null;
    private InvTypes selectedBP = null;
    private static final Logger log = Logger.getLogger(BlueprintValuePanel2.class.getName());
    /**
     * Creates new form BPValue2
     */
    public BlueprintValuePanel2(App appl, bpValSplit parentPanel) {
        app = appl;
        parent = parentPanel;
        
        initComponents();
        this.createLayout();
    }
    
    private void createLayout() {
        this.setLayout(new BorderLayout());
        
        JTree tree = new JTree(createBPTree());
        tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        tree.addTreeSelectionListener(this);
        treeView = new JScrollPane(tree);
        this.add(treeView, BorderLayout.CENTER);
    }

    @Override
    public void valueChanged(TreeSelectionEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) e.getPath().getLastPathComponent();
        
        if (node == null) return;
        
        if (node.isLeaf()) {
            bpLeaf leaf = (bpLeaf) node.getUserObject();
            selectedBP = leaf.getInvTypes();
            //parent.calcBPValue(selectedBP);
            parent.calcBPTable(selectedBP);
            this.validate();
        }
    }
    
    private class bpLeaf {
        private String nodeName = "";
        private InvTypes nodeType = null;
        
        public bpLeaf(InvTypes data) {
            nodeName = data.getTypeName();
            nodeType = data;
        }
        
        @Override
        public String toString() {
            return nodeName;
        }
        
        public InvTypes getInvTypes() {
            return nodeType;
        }
    }

    private DefaultMutableTreeNode createBPTree() {
        InvCategories bpCategory = app.getSdeWorker().findCategoriesByName("Blueprint");
        DefaultMutableTreeNode topNode = new DefaultMutableTreeNode("Blueprints");
        
        for (InvGroups group : bpCategory.getInvGroups()) {
            if (group.getPublished().equals(1)) {
                DefaultMutableTreeNode groupNode = new DefaultMutableTreeNode(group.getGroupName());
                int groupSize = 0;
                for (InvTypes type : group.getInvTypes()) {
                    if (type.getPublished() == true) {
                        bpLeaf leaf = new bpLeaf(type);
                        groupNode.add(new DefaultMutableTreeNode(leaf));
                        groupSize++;
                    }
                }
                if (groupSize > 0) {
                    topNode.add(groupNode);
                }
            }
        }
        return topNode;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
