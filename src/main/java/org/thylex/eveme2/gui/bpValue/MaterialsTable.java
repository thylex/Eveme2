/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thylex.eveme2.gui.bpValue;

import java.awt.BorderLayout;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import org.thylex.eveme2.app.App;
import org.thylex.eveme2.io.entities.dyn.TypePrice;
import org.thylex.eveme2.io.entities.sde.IndActivityTypes;
import org.thylex.eveme2.io.entities.sde.IndustryActivityMaterials;
import org.thylex.eveme2.io.entities.sde.InvTypes;

/**
 *
 * @author thyle
 */
public class MaterialsTable extends javax.swing.JPanel {

    private InvTypes bp = null;
    private App app = null;
    private static final Logger logger = Logger.getLogger(MaterialsTable.class.toString());
    private JTable materialTable = null;
    /**
     * Creates new form MaterialsTable
     */
    public MaterialsTable(InvTypes blueprint, App appl) {
        bp = blueprint;
        app = appl;
        
        initComponents();
        
        this.setLayout(new BorderLayout());
        
        materialTable = new JTable(calcBPValue(blueprint));
        materialTable.setFillsViewportHeight(true);
        this.add(new JScrollPane(materialTable), BorderLayout.CENTER);
        
        this.setVisible(true);
    }

    private MaterialTableModel calcBPValue(InvTypes item) {
        logger.log(Level.INFO, "Calculating value of ".concat(item.getTypeName()));
        
        HashMap<String, Set<IndustryActivityMaterials>> sorted = sortItems(item);
        HashSet<Integer> typeIDs = new HashSet();
        HashMap<Integer, TypePrice> prices;
        
        logger.log(Level.INFO, "Finding materials for production");
        // Build list of item IDs and get prices for them
        for (IndustryActivityMaterials mat : app.getSdeWorker().findIndyMaterials(item.getTypeID(), IndActivityTypes.Manufacturing)) {
            typeIDs.add(mat.getMaterial().getTypeID());
        }

        logger.log(Level.INFO, "Checking prices for materials");
        prices = (HashMap<Integer, TypePrice>) app.getDynWorker().getPrices(typeIDs, Boolean.TRUE);
        
        logger.log(Level.INFO, "Making new TableModel");
        // Create new tablemodel
        MaterialTableModel model = new MaterialTableModel(sorted, prices);
        return model;
    }
    
    private HashMap<String, Set<IndustryActivityMaterials>> sortItems(InvTypes typeItem) {
        HashMap<String, Set<IndustryActivityMaterials>> result = new HashMap<>();
        for (IndustryActivityMaterials mat : app.getSdeWorker().findIndyMaterials(typeItem.getTypeID(), IndActivityTypes.Manufacturing)) {
            //String key = mat.getMaterial().getInvGroup().getInvCategory().getCategoryName();
            String key = app.getSdeWorker().findCategoryNameById(mat.getMaterial().getInvGroup().getCategoryID());
            if (result.containsKey(key)) {
                Set<IndustryActivityMaterials> temp = result.get(key);
                temp.add(mat);
                result.put(key, temp);
            } else {
                Set<IndustryActivityMaterials> temp;
                temp = new HashSet<>();
                temp.add(mat);
                result.put(key, temp);
            }
        }
        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
